#!pip install sentence_transformers
from sentence_transformers import SentenceTransformer, util
from PIL import Image
import numpy

#Load CLIP model
model1 = SentenceTransformer('clip-ViT-B-32-multilingual-v1')
model = SentenceTransformer('clip-ViT-B-32')

import requests
import urllib.parse
import time
from time import sleep
import re

def formaturl(url):
    if not re.match('(?:http|ftp|https)://', url):
        return 'http://{}'.format(url)
    return url
def top_image_finder(text,image_links):
    text_emb = model1.encode(text)
    k=[]
    # print(image_links)
    for c, i in enumerate(image_links):
        try:
            url = i
            # print(i)
            # url = formaturl(url.split('?')[0])
            url = formaturl(url.split("',")[0])
            # print(url)
            headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.76 Safari/537.36', "Upgrade-Insecure-Requests": "1","DNT": "1","Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8","Accept-Language": "en-US,en;q=0.5","Accept-Encoding": "gzip, deflate"}
            res = requests.get(url,headers=headers,timeout=7)
            with open("/content/"+str(c)+".jpg", 'wb') as f:
                f.write(res.content)
            #Encode an image:
            img_emb = model.encode(Image.open("/content/"+str(c)+".jpg"))
            #Compute cosine similarities 
            cos_scores = util.cos_sim(img_emb, text_emb)
            k.append(cos_scores.numpy()[0][0])
        except:
            cos_scores =0
            k.append(cos_scores)
    print(k)
    max_value = numpy.argmax(k)
    return image_links[max_value]
    
import numpy as np
import pandas as pd

df=pd.read_excel("/content/fact_crescendo_hindi_V2.xlsx")
df = df[["website", "link", "title", "claim", "image_links"]].dropna()
df.rename(columns = {"top_image":"image_links"},inplace=True)
# df=df.head()

mylist=[]
for index, row in df.iterrows():
    print(index)
    text = str(row.claim)
    image_links = row.image_links
    image_links= re.findall('www.(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+', str(image_links)) + re.findall('http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\(\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+', str(image_links))

    # text="?????? ?????? ?????? ?? ???????????, ?? ???????, ???????????? ?? ??????????? ?? ??????? ??????? ???? ???? ??, ?? 17 ????? ?? ??-????? ?? ?? ?????? ????? ????, ?????? ?? ???? ?? ?? ????? ????? ??? ??? ??? ???? ?????? ?? ?? ?????? ?? ??? ????? ???? ???- “???? ?? 2,000 ????? ?? 40 ?? ?? ???? ??? ???? ???? ??????? @ScaniaGroup ???” (??????) ??? 19.000 ?? ???? ??? ??????? ?? 81,000 ?? ???? ??? ???? ???? ??? ??? Can you pick up a 40-ton truck with 2,000 drones? Credit to @ScaniaGroup pic.twitter.com/q2oMBJyStZ — World of Engineering (@engineers_feed) November 17, 2019 ???? ??? ?? ?? ????? ?? ???? ?????? ?? ?? ?????? ????? ?? ???? ???? ??? ??????? ????? ????? ?? ??? ???????? ?? ???? ??? ????? ?? ??? ????? ?? ??? ???? "
    # image_links=['www.altnews.in/hindi/wp-content/uploads/sites/2/2019/11/Screenshot-2019-11-18-at-7.59.36-PM.png?resize=828%2C604&ssl=1', 'www.altnews.in/hindi/wp-content/uploads/sites/2/2019/11/Screenshot-2019-11-18-at-7.48.17-PM-1320x697.jpg?resize=1320%2C697&ssl=1', 'www.altnews.in/hindi/wp-content/uploads/sites/2/2019/11/Screenshot-2019-11-18-at-4.18.15-PM.png?resize=848%2C534&ssl=1', 'www.altnews.in/hindi/wp-content/uploads/sites/2/2019/11/selection_18_11_2019_001-1-1320x558.jpg?resize=1320%2C558&ssl=1', 'www.altnews.in/hindi/wp-content/uploads/sites/2/2019/11/Screenshot-2019-11-18-at-9.59.06-PM.png?resize=581%2C619&ssl=1']
    try:
        image = formaturl(top_image_finder(text,image_links).split("',")[0])
    except:
        image = "http://www.altnews.in/hindi/wp-content/uploads/sites/2/2019/11/Screenshot-2019-11-18-at-7.59.36-PM.png"
    mylist.append(image)

np.save('factly_telgu.npy', mylist)
df['new_col'] = np.array(mylist)
df.to_excel("/content/factly_telgu.xlsx")